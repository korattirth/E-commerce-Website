<?xml version="1.0"?>
<doc>
    <assembly>
        <name>E-commerce Website</name>
    </assembly>
    <members>
        <member name="M:E_commerce_Website.Controllers.AccountController.Ragister(E_commerce_Website.DTOs.RagisterDTO)">
            <summary>This endpoint will create a new user, including their contacts, address book and entities. 
            This function can only be used by employees who have the rights and is not accessible from the outside.
             </summary>
             <remarks>Ragister Method</remarks>
            <response code="200">If the user registers successfully </response>
            <response code="400">If any Validation error arrive </response>
        </member>
        <member name="M:E_commerce_Website.Controllers.AccountController.Login(E_commerce_Website.DTOs.LoginDTO)">
            <summary>Registered users can login using this API described below.
            The login operation requires two properties: one marked as user identity and the second is password. 
            After login, user will get token value for that user.</summary>
             <remarks>Login Method</remarks>
            <response code="200">If the user login successfully </response>
            <response code="401">If user credentials are invalid </response>
        </member>
        <member name="M:E_commerce_Website.Controllers.AccountController.GetCurrentUser(System.String)">
            <summary>This endpoint retrieves the current login users' information (name, address, contacts, token , basket items and so on) 
            that matches the query condition.
            In addition to input parameters, you may also have to provide the access token indicating when you login.
            </summary>
             <remarks> ****GET**** /api/Account/currentUser</remarks>
             <param name="token">In order to get current user details, the user will need to provide their
             token through the header</param>
            <response code="200">If the user is autorize than it will return user details and basket </response>
            <response code="400">If user's token is not valid </response>
        </member>
        <member name="M:E_commerce_Website.Controllers.AccountController.RetrieveBasket(System.String)">
            <remarks> ****GET**** /api/Account/savedAddress</remarks>
        </member>
        <member name="M:E_commerce_Website.Controllers.BasketController.CreateBasket">
            <summary>
            This endpoint remove product into basket when we provide productId and quantity 
            </summary>
            <remarks> ****DELETE**** /api/Basket</remarks>
            <param name="productId">Required for finding Product</param>
            <param name="quantity">How many Product want's to remove</param>
            <response code="200">If product removed successfully</response>
            <response code="400">If ProductId or quantity parameter is missing</response>
            <response code="404">If product does't found in database</response>
        </member>
        <member name="M:E_commerce_Website.Controllers.TestController.Test1(System.String,System.String)">
            <summary>
            This endpoint retrieves all of the users' information (name, adress, contacts, and so on) that matches the query condition
            </summary>
            <param name="test">Only for testing purpose</param>
            <param name="test1">This for parameter</param>
            <remarks> ****Get**** /api/Test1?test=:test</remarks>
            <returns>IEnumerable of slugs</returns>
            <response code="200">If all requested items are found</response>
            <response code="400">If test parameter is missing
            </response>
            <response code="404">If number of records found doesn't equal 
            number of records requested</response>
        </member>
        <member name="M:E_commerce_Website.Utils.MyHeaderFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Operation filter to add the requirement of the custom header
            </summary>
        </member>
    </members>
</doc>
